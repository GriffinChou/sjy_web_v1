# Generated by Django 3.1.4 on 2021-01-20 16:04

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import idcops.lib.fields
import idcops.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_auto_20210114_1024'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('mobile', models.CharField(max_length=16, verbose_name='手机号码')),
                ('avatar', models.ImageField(default='avatar/default.png', upload_to='avatar/%Y/%m/%d', verbose_name='头像')),
                ('address', models.CharField(max_length=128, verbose_name='家庭住址')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '用户管理',
                'verbose_name_plural': '用户管理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='请使用客户全称或跟其他系统保持一致', max_length=64, verbose_name='客户名称')),
                ('phone', models.CharField(help_text='座机号或者负责人手机号', max_length=64, verbose_name='联系方式')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_client_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='推荐命名规则:客户-项目-工程', max_length=100, verbose_name='工程名称')),
            ],
            options={
                'verbose_name': '工程管理',
                'verbose_name_plural': '工程管理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='数据中心名称命名 如：神经元大数据处理', max_length=16, unique=True, verbose_name='数据中心名称')),
                ('desc', models.CharField(help_text='对该数据中心的描述', max_length=64, unique=True, verbose_name='描述')),
                ('codename', models.SlugField(blank=True, help_text='数据中心代码，用于编号前缀', null=True, verbose_name='数据中心代码')),
                ('address', models.CharField(help_text='具体地址如：云南省昆明市五华区', max_length=64, unique=True, verbose_name='数据中心地址')),
                ('duty', models.CharField(blank=True, default='7*24', help_text='数据中心值班类型,例如:5*8', max_length=16, null=True, verbose_name='值班类型')),
                ('tel', models.CharField(help_text='联系方式，例如：021-358795', max_length=32, verbose_name='联系方式')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_idc_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('managers', models.ManyToManyField(blank=True, help_text='权限将比普通用户多一些', to=settings.AUTH_USER_MODEL, verbose_name='管理人员')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_idc_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '数据中心',
                'verbose_name_plural': '数据中心',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change'),
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('address', models.GenericIPAddressField(help_text='例如：172.16.21.1', verbose_name='IP 地址')),
                ('hostname', idcops.lib.fields.NullableCharField(blank=True, default=None, max_length=255, null=True, verbose_name='主机名')),
                ('is_management', models.BooleanField(default=False, verbose_name='管理地址')),
                ('is_public', models.BooleanField(default=False, editable=False, verbose_name='公有地址')),
                ('is_gateway', models.BooleanField(default=False, verbose_name='网关地址')),
                ('status', models.BooleanField(default=None, help_text='如果IP地址已被使用，则值为True', verbose_name='状态')),
                ('number', models.DecimalField(decimal_places=0, default=None, editable=False, help_text='IP地址的整数形式', max_digits=39, verbose_name='IP号')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': 'IP address',
                'verbose_name_plural': 'IP address',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('flag', models.SlugField(choices=[('', '---------')], help_text='创建项目，请选择“工程管理-所属项目”', max_length=64, verbose_name='标记类型')),
                ('text', models.CharField(help_text='自定义该项目的名称', max_length=64, verbose_name='项目名称')),
                ('description', models.CharField(blank=True, help_text='记录内容的帮助信息/说明/注释', max_length=128, verbose_name='记录说明')),
                ('color', models.SlugField(blank=True, choices=[('red', '未开始'), ('orange', '橙色'), ('yellow', '黄色'), ('green', '深绿色'), ('blue', '蓝色'), ('muted', '灰色'), ('black', '黑色'), ('aqua', '浅绿色'), ('gray', '浅灰色'), ('navy', '海军蓝'), ('teal', '水鸭色'), ('olive', '橄榄绿'), ('lime', '高亮绿'), ('fuchsia', '紫红色'), ('purple', '紫色'), ('maroon', '褐红色'), ('white', '白色'), ('light-blue', '暗蓝色')], help_text='状态标签，用于显示当前项目进行到哪一步', max_length=12, null=True, verbose_name='状态')),
                ('master', models.BooleanField(default=False, help_text='用于默认选中,比如:默认使用的设备类型是 服务器', verbose_name='默认使用')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_option_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_option_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_option_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '项目管理',
                'verbose_name_plural': '项目管理',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'delete', 'exports', 'change'),
                'unique_together': {('flag', 'text')},
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(help_text='如：财务部', max_length=32, verbose_name='部门名称')),
                ('unitc', models.PositiveSmallIntegerField(default=20, help_text='填写部门的人数,默认:20', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(180)], verbose_name='部门人数')),
                ('pduc', models.PositiveSmallIntegerField(default=30, help_text='填写A、B两路PDU数总和,默认:30个', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)], verbose_name='PDU数量')),
                ('cpower', models.PositiveIntegerField(default=10, help_text='跟客户签署的合同电力,用于计算客户是否超电', verbose_name='合同电力 (A)')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_rack_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('status', models.ForeignKey(blank=True, help_text='从机房选项中选取 机柜状态', limit_choices_to={'flag': 'Rack-Status'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_status', to='idcops.option', verbose_name='机柜状态')),
                ('style', models.ForeignKey(blank=True, help_text='从机房选项中选取 机柜类型', limit_choices_to={'flag': 'Rack-Style'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rack_style', to='idcops.option', verbose_name='机柜类型')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag': 'Rack-Tags'}, related_name='idcops_rack_tags', to='idcops.Option', verbose_name='机柜标签')),
            ],
            options={
                'verbose_name': '部门管理',
                'verbose_name_plural': '部门管理',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(help_text='必须是数字字符串,例如：01, 46, 47', max_length=3, verbose_name='姓名')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_unit_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_unit_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, help_text='该用户所属的部门信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_unit_rack', to='idcops.rack', verbose_name='所属部门')),
            ],
            options={
                'verbose_name': '通讯录',
                'verbose_name_plural': '通讯录',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('rack', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Testapply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('start_time', models.DateTimeField(default=datetime.datetime.now, help_text='该对象限定的开始时间', verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='该对象限定的结束时间', null=True, verbose_name='结束时间')),
                ('name', models.CharField(help_text='新建照片元数据名称', max_length=32, unique=True, verbose_name='元数据名称')),
                ('system_user', models.SlugField(help_text='测试机系统的登录用户名', max_length=32, verbose_name='系统用户名')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_testapply_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_testapply_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('goods', models.ForeignKey(help_text='从现有工程中选取', on_delete=django.db.models.deletion.CASCADE, related_name='idcops_testapply_goods', to='idcops.goods', verbose_name='工程名称')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_testapply_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_testapply_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_testapply_parent', to='idcops.testapply', verbose_name='父级对象')),
            ],
            options={
                'verbose_name': '照片元数据处理',
                'verbose_name_plural': '照片元数据处理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Syslog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('action_flag', models.CharField(max_length=32, verbose_name='action flag')),
                ('message', models.TextField(blank=True, verbose_name='change message')),
                ('object_desc', models.CharField(max_length=128, verbose_name='对象描述')),
                ('related_client', models.CharField(blank=True, max_length=128, null=True, verbose_name='关系客户')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'idcops'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_syslog_content_type', to='contenttypes.contenttype', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_syslog_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_syslog_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_syslog_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': 'log entries',
                'verbose_name_plural': 'log entries',
                'ordering': ['-created'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Rextend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('ups1', models.DecimalField(blank=True, decimal_places=1, default='0.0', help_text='填写数值', max_digits=3, verbose_name='A路电量')),
                ('ups2', models.DecimalField(blank=True, decimal_places=1, default='0.0', help_text='填写数值', max_digits=3, verbose_name='B路电量')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, default='22.0', help_text='机柜温度', max_digits=3, verbose_name='机柜温度')),
                ('humidity', models.DecimalField(blank=True, decimal_places=1, default='55.0', help_text='机柜湿度', max_digits=3, verbose_name='机柜湿度')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_rextend_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_rextend_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, help_text='该用户所属的部门信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_rextend_rack', to='idcops.rack', verbose_name='所属部门')),
            ],
            options={
                'verbose_name': '电量温湿度',
                'verbose_name_plural': '电量温湿度',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Pdu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(max_length=12, verbose_name='PDU名称')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_pdu_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_pdu_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, help_text='该用户所属的部门信息', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idcops_pdu_rack', to='idcops.rack', verbose_name='所属部门')),
            ],
            options={
                'verbose_name': '性能监控',
                'verbose_name_plural': '性能监控',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('rack', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('address', idcops.lib.fields.IPNetwork(help_text='以字符串形式显示（例如172.16.21.0/24）', max_length=44, verbose_name='网络地址')),
                ('vlan', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='VLAN ID')),
                ('vrf', models.CharField(blank=True, help_text='虚拟路由转发 (Virtual Routing and Forwarding)', max_length=32, null=True, verbose_name='VRF')),
                ('discovery_hosts', models.BooleanField(default=True, help_text='通过ICMP协议发现子网中新主机', verbose_name='自动发现')),
                ('check_hosts', models.BooleanField(default=False, help_text='ping 子网内的主机以检查可用性', verbose_name='检查主机')),
                ('is_public', models.BooleanField(default=None, editable=False, verbose_name='公有地址')),
                ('min_ip', models.DecimalField(decimal_places=0, editable=False, max_digits=39, verbose_name='最小IP号')),
                ('max_ip', models.DecimalField(decimal_places=0, editable=False, max_digits=39, verbose_name='最大IP号')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_gateway', to='idcops.ipaddress', verbose_name='网关地址')),
                ('kind', models.ForeignKey(blank=True, help_text='从机房选项中新建选择', limit_choices_to={'flag__icontains': 'Network-Kind'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_kind', to='idcops.option', verbose_name='网络类型')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_network_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_network_parent', to='idcops.network', verbose_name='父级对象')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自项目选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='idcops_network_tags', to='idcops.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': '网络管理',
                'verbose_name_plural': '网络管理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('min_ip', 'max_ip')},
            },
        ),
        migrations.CreateModel(
            name='Jumpline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('linenum', models.SlugField(editable=False, help_text='系统自动生成的slug, 整个系统唯一的编号', max_length=32, unique=True, verbose_name='项目编号')),
                ('sflag', models.CharField(help_text='填写项目名称，例如：长新村项目', max_length=64, verbose_name='项目名称')),
                ('route', models.TextField(blank=True, help_text='按照上面格式填写中途路由节点信息', null=True, verbose_name='途径路由')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_jumpline_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_jumpline_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_jumpline_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('sclient', models.ForeignKey(help_text='选择本端客户', on_delete=django.db.models.deletion.PROTECT, to='idcops.client', verbose_name='所属客户')),
                ('slocation', models.ForeignKey(help_text='选择本端机柜号', on_delete=django.db.models.deletion.PROTECT, related_name='slocation', to='idcops.rack', verbose_name='本端机柜')),
            ],
            options={
                'verbose_name': '项目状态',
                'verbose_name_plural': '项目状态',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='network',
            field=models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_ipaddress_network', to='idcops.network', verbose_name='所属网域'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_ipaddress_onidc', to='idcops.idc', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_ipaddress_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自项目选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='idcops_ipaddress_tags', to='idcops.Option', verbose_name='通用标签'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('kcnum', models.SlugField(editable=False, help_text='系统自动生成的slug, 整个系统唯一的编号', max_length=32, unique=True, verbose_name='POS编号')),
                ('location', models.FileField(blank=True, help_text='存放位置, 从本地选取', max_length=256, upload_to='', verbose_name='文件地址')),
                ('expressnum', models.CharField(help_text='例如：超图五镜头POS数据', max_length=200, verbose_name='POS名称')),
                ('amount', models.IntegerField(help_text='统计上传的pos文件数量', verbose_name='数量')),
                ('client', models.ForeignKey(blank=True, help_text='该项目所属的客户信息', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_inventory_client', to='idcops.client', verbose_name='所属客户')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_inventory_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('goods', models.ForeignKey(help_text='从现有工程中选取', on_delete=django.db.models.deletion.CASCADE, related_name='idcops_inventory_goods', to='idcops.goods', verbose_name='工程名称')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_inventory_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_inventory_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('parent', models.ForeignKey(blank=True, help_text='该对象的上一级关联对象', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_inventory_parent', to='idcops.inventory', verbose_name='父级对象')),
                ('state', models.ForeignKey(help_text='来自机房选项, 标记类型为: 库存物品-物品状态', limit_choices_to={'flag': 'Inventory-State'}, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_inventory_state', to='idcops.option', verbose_name='处理状态')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag': 'Inventory-Tags'}, related_name='idcops_inventory_tags', to='idcops.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': 'POS处理',
                'verbose_name_plural': 'POS处理',
                'ordering': ['-actived', '-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='goods',
            name='brand',
            field=models.ForeignKey(blank=True, help_text='选择这个项目所属的客户名称', limit_choices_to={'flag': 'Goods-Brand'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_goods_brand', to='idcops.option', verbose_name='所属客户'),
        ),
        migrations.AddField(
            model_name='goods',
            name='creator',
            field=models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_goods_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='goods',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_goods_onidc', to='idcops.idc', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='goods',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_goods_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='goods',
            name='unit',
            field=models.ForeignKey(help_text='从已建项目中选取', limit_choices_to={'flag': 'Goods-Unit'}, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_goods_unit', to='idcops.option', verbose_name='所属项目'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('title', models.CharField(max_length=128, verbose_name='文档标题')),
                ('body', models.TextField(verbose_name='文档内容')),
                ('category', models.ForeignKey(blank=True, help_text='分类, 从机房选项中选取', limit_choices_to={'flag': 'Document-Category'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_category', to='idcops.option', verbose_name='文档分类')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_document_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('status', models.ForeignKey(blank=True, help_text='从机房选项中选取', limit_choices_to={'flag': 'Document-Status'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_document_status', to='idcops.option', verbose_name='文档状态')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag': 'Document-Tags'}, related_name='idcops_document_tags', to='idcops.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': '数据修改',
                'verbose_name_plural': '数据修改',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.SlugField(help_text='默认最新一个可用编号', max_length=32, unique=True, verbose_name='编号')),
                ('sn', models.SlugField(help_text='比如: FOC1447001', max_length=64, verbose_name='设备SN号')),
                ('ipaddr', models.FileField(help_text='比如: C:/datasets/超图pos.txt', max_length=128, upload_to='', verbose_name='pos地址')),
                ('model', models.FileField(help_text='比如: C:/超图/A/', max_length=128, upload_to='', verbose_name='照片地址')),
                ('urange', models.CharField(blank=True, help_text='U位起始到结束，比如：05-08', max_length=12, null=True, verbose_name='U位范围')),
                ('status', models.SlugField(choices=[('online', '在线'), ('offline', '已下线'), ('moved', '已迁移')], default='online', help_text='默认为在线', verbose_name='状态')),
                ('client', models.ForeignKey(help_text='该pos所属的工程信息', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_client', to='idcops.client', verbose_name='所属工程')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_device_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('pdus', models.ManyToManyField(blank=True, help_text='设备所用机柜中的PDU接口信息', to='idcops.Pdu', verbose_name='PDU接口')),
                ('rack', models.ForeignKey(help_text='该pos所属的项目信息', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_rack', to='idcops.rack', verbose_name='所属项目')),
                ('style', models.ForeignKey(help_text='设备类型默认为服务器', limit_choices_to={'flag': 'Device-Style'}, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_device_style', to='idcops.option', verbose_name='设备类型')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自机房选项', limit_choices_to={'flag': 'Device-Tags'}, related_name='idcops_device_tags', to='idcops.Option', verbose_name='设备标签')),
                ('units', models.ManyToManyField(blank=True, help_text='设备所在机柜中的U位信息', to='idcops.Unit', verbose_name='设备U位')),
            ],
            options={
                'verbose_name': '模型生产',
                'verbose_name_plural': '模型生产',
                'ordering': ['-modified'],
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('onidc', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Configure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'idcops'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_configure_content_type', to='contenttypes.contenttype', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_configure_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_configure_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_configure_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '用户配置',
                'verbose_name_plural': '用户配置',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.TextField(blank=True, verbose_name='详细内容')),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to={'app_label': 'idcops'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_comment_content_type', to='contenttypes.contenttype', verbose_name='content type')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_comment_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_comment_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_comment_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
            ],
            options={
                'verbose_name': '备注信息',
                'verbose_name_plural': '备注信息',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='client',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_client_onidc', to='idcops.idc', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='client',
            name='operator',
            field=models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_client_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人'),
        ),
        migrations.AddField(
            model_name='client',
            name='style',
            field=models.ForeignKey(help_text='从客户类型选项中选取', limit_choices_to={'flag': 'Client-Style'}, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_client_style', to='idcops.option', verbose_name='客户类型'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('name', models.CharField(max_length=255, verbose_name='file name')),
                ('file', models.FileField(upload_to=idcops.models.upload_to, verbose_name='file')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_attachment_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_attachment_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_attachment_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('tags', models.ManyToManyField(blank=True, help_text='可拥有多个标签,字段数据来自项目选项', limit_choices_to={'flag__icontains': 'tags'}, related_name='idcops_attachment_tags', to='idcops.Option', verbose_name='通用标签')),
            ],
            options={
                'verbose_name': '媒体文件',
                'verbose_name_plural': '媒体文件',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='onidc',
            field=models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_user_onidc', to='idcops.idc', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='user',
            name='upper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_user_upper', to=settings.AUTH_USER_MODEL, verbose_name='直属上级'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Offline',
            fields=[
            ],
            options={
                'verbose_name': '工程管理11111',
                'verbose_name_plural': '工程管理11111',
                'abstract': False,
                'proxy': True,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'indexes': [],
                'constraints': [],
            },
            bases=('idcops.device',),
        ),
        migrations.CreateModel(
            name='Online',
            fields=[
            ],
            options={
                'verbose_name': '导入POS',
                'verbose_name_plural': '导入POS',
                'abstract': False,
                'proxy': True,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'indexes': [],
                'constraints': [],
            },
            bases=('idcops.device',),
        ),
        migrations.CreateModel(
            name='Zonemap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, choices=[('shared', '已共享的'), ('pre_share', '预共享的')], help_text='系统Slug内容标记', max_length=64, null=True, verbose_name='系统标记')),
                ('created', models.DateTimeField(default=datetime.datetime.now, help_text='该对象的创建日期', verbose_name='创建日期')),
                ('modified', models.DateTimeField(auto_now=True, help_text='该对象的修改日期', verbose_name='修改日期')),
                ('actived', models.BooleanField(default=True, help_text='该对象是否为有效资源', verbose_name='已启用')),
                ('deleted', models.BooleanField(default=False, help_text='该对象是否已被删除', verbose_name='已删除')),
                ('row', models.PositiveSmallIntegerField(verbose_name='行号')),
                ('col', models.PositiveSmallIntegerField(verbose_name='列号')),
                ('desc', models.CharField(blank=True, default='-', max_length=128, verbose_name='坐标描述')),
                ('creator', models.ForeignKey(help_text='该对象的创建人', on_delete=django.db.models.deletion.PROTECT, related_name='idcops_zonemap_creator', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('onidc', models.ForeignKey(blank=True, help_text='该数据所属的项目', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_zonemap_onidc', to='idcops.idc', verbose_name='所属项目')),
                ('operator', models.ForeignKey(blank=True, help_text='该对象的修改人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_zonemap_operator', to=settings.AUTH_USER_MODEL, verbose_name='修改人')),
                ('rack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idcops_zonemap_rack', to='idcops.rack', verbose_name='机柜号')),
                ('zone', models.ForeignKey(limit_choices_to={'flag': 'Rack-Zone'}, on_delete=django.db.models.deletion.PROTECT, related_name='idcops_zonemap_zone', to='idcops.option', verbose_name='所在区域')),
            ],
            options={
                'verbose_name': '模型管理',
                'verbose_name_plural': '模型管理',
                'abstract': False,
                'default_permissions': ('view', 'add', 'change', 'delete', 'exports'),
                'unique_together': {('zone', 'row', 'col')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='goods',
            unique_together={('brand', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='client',
            unique_together={('onidc', 'name')},
        ),
    ]
